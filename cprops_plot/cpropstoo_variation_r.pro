PRO cpropstoo_variation_r, intable = intable $
             , inprop = inprop $
						 , inner_pc = inner_pc $
						 , ring_pc = ring_pc $
						 , outer_pc = outer_pc $
						 , dist_binsize = dist_binsize $
						 , Rc_binsize = Rc_binsize $
						 , out_Rc_distribution = out_Rc_distribution $
						 , out_Mlum_distribution = out_Mlum_distribution $
						 , out_vrms_distribution = out_vrms_distribution $
             , out_sigmaGas_distribution = out_sigmaGas_distribution $
             , out_alphavir_distribution = out_alphavir_distribution $
                      , checkfile_re = checkfile_re $
                        , alpha_co = alpha_co

             ; , out_sigmaGas_vs_Rc = out_sigmaGas_vs_Rc  $
             ; , out_sigmaGas_vs_Mlum = out_sigmaGas_vs_Mlum  $


;+
; NAME: 
;   cpropstoo_variation_r
;
; PURPOSE:
;   Generate figures showing the variation of properties as distance ra
;
; INPUTS:
;  intable  --  the table of gmc properties generated by 'cpropsdist_gmc_table.pro'
;  inner_pc --  the distance boundary in [pc] for 'inner' and 'outer' regions
;               of galaxies   
; OUTPUTS:
;   outtable   --  the '.csv' file of output table
; 
; HISTORY:
;   20180309  LJ   introduced	

; HEAD MESSAGE
  print, '=============================================================='
  print, 'CPROPSTOO: Figures Showing Variation of Properties as distance'
  print, '=============================================================='


; READ INPUT TABLE
  ; readcol,intable, ID, RA, Dec, Vlsr, R, d_R, vrms, d_vrms, vturb, d_vturb, $
  ;     Lum, d_Lum, Mlum, d_Mlum, Tmax, Omega_shear, Theta_shear, distance, $
  ;     F='I, a, a, f, f, f, f, f, f, f, f, f, f, f, f, f, f, f'
  ; Lum = Lum * 1e4
  ; d_Lum = d_Lum * 1e4
  ; Mlum = Mlum * 1e5
  ; d_Mlum = d_Mlum * 1e5

array_re = fltarr(file_lines(checkfile_re))
openr, lun, checkfile_re, /get_lun
readf, lun, array_re
free_lun, lun

resolve_ind = where( array_re gt 0.5, res_ct)

restore, inprop
Mlum = props.lum_extrap * alpha_co ; props.mass_extrap
d_Mlum = props.mass_extrap_uc
R = props.radrms_extrap_deconv
d_R = props.radrms_extrap_deconv_uc
vrms = props.vrms_extrap_deconv
distance = props.r_gal
; resolve_spatial = props.resolve_spatial
; resolve_spectral = props.resolve_spectral

Mvir = (props.VIRMASS_EXTRAP_DECONV) ; tested, the same as vrms_extrap_deconv**2 * radrms_extrap_deconv / (b*G); b=0.2, G=4.302e-3
Mlum = (props.mom0_extrap*props.chanwidth_kms*(props.pcperpix)^2*alpha_co) ; tested, the same as lum_extrap * alpha_co
alpha_vir = Mvir/Mlum
log_alpha = alog10(alpha_vir)

sigma = Mlum/(!pi*R^2.)
d_logR=1./alog(10.)*d_R/R
d_logM=1./alog(10.)*d_Mlum/Mlum
d_sigma =sqrt(d_Mlum^2.*(1./(!pi*R^2.))^2. + d_R^2.*(-2.*Mlum/!pi/R^3.)^2.)
d_logSigma=1./alog(10.)*d_sigma/sigma

; R[where(~finite(R),/null)] = 0.0
; vrms[where(~finite(vrms),/null)] = 0.0
; finite_ind = (finite(sigma)) ; (finite(Mlum) ) and (finite(R) ) ; and (finite(vrms)) ; 

; resolve_ind = where( ((resolve_spatial * resolve_spectral) ge 1.0) , /NULL, res_ct) ;  and finite_ind ; ; ; * (distance lt 1000) 

;   galaxy=(strsplit(intable,'/',/extract))[-1]
;   if (strmatch(galaxy,'*_*',/fold_case) eq 1) then begin
;     galaxy=(strsplit(galaxy,'_',/extract))[0]
;   endif
;   if (strmatch(galaxy,'*.*',/fold_case) eq 1) then begin
;     galaxy=(strsplit(galaxy,'.',/extract))[0]
;   endif
;   print, 'Galaxy Name: ', galaxy


; ; Radial Distribution of Cloud Properties
;   if galaxy eq 'NGC4429' then begin
;   	resolve_ind = where((R gt 0.0) and (distance le 430.), res_ct)
;   endif else begin
;   	resolve_ind = where(R gt 0.0, res_ct)
;   endelse

  print,' res_ct', res_ct

  distance_r = distance[resolve_ind]
  
  ; r stands for "resolved", inherited from previous versions
  R_r = R[resolve_ind]
  Mlum_r = Mlum[resolve_ind]
  sigma_r = sigma[resolve_ind]
  vrms_r = vrms[resolve_ind]
  log_alpha_r = log_alpha[resolve_ind]

  if n_elements(dist_binsize) eq 0 then $
	  dist_binsize = 30.0
  yhist = histogram(distance_r, binsize = dist_binsize, min = min(distance_r), $
        max = max(distance_r), location = dist_binvals, Reverse_Indices = Rd)

  Rc_array = make_array(n_elements(yhist))
  Mlum_array = make_array(n_elements(yhist))
  sigma_array = make_array(n_elements(yhist))
  vrms_array = make_array(n_elements(yhist))
  for i = 0, n_elements(yhist)-1 do begin
     if Rd[i] NE Rd[i+1] then Rc_array[i] = mean(R_r[Rd[Rd[i] : Rd[i+1]-1]]) $
		else Rc_array[i] = R_r[Rd[Rd[i]]]
     if Rd[i] NE Rd[i+1] then Mlum_array[i] = mean(Mlum_r[Rd[Rd[i] : Rd[i+1]-1]]) $
		else Mlum_array[i] = Mlum_r[Rd[Rd[i]]]
     if Rd[i] NE Rd[i+1] then sigma_array[i] = mean(sigma_r[Rd[Rd[i] : Rd[i+1]-1]]) $
		else sigma_array[i] = sigma_r[Rd[Rd[i]]]
     if Rd[i] NE Rd[i+1] then vrms_array[i] = mean(vrms_r[Rd[Rd[i] : Rd[i+1]-1]]) $
		else vrms_array[i] = vrms_r[Rd[Rd[i]]]
  endfor
  Mlum_array = alog10(Mlum_array)
  sigma_array = alog10(sigma_array)

; inner/ring/outer_ind
  if keyword_set(inner_pc) gt 0 then begin
    inner_ind=where(distance_r le inner_pc, inner_ct)
    ring_ind=where((distance_r gt ring_pc[0]) and (distance_r le ring_pc[1]),ring_ct)
    outer_ind=where((distance_r gt outer_pc[0]) and (distance_r le outer_pc[1]), outer_ct)
  endif else begin
	outer_ct = 0
	inner_ct = 0
	ring_ct = 0
  endelse


; ----------------------------------------
; Plot R distribution
; ----------------------------------------
!P.FONT = 1
  set_plot,'ps'
  device, filename=out_Rc_distribution, bits_per_pixel=8, /encapsulated, $
        xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0, SET_FONT='Times', /TT_FONT

  !p.multi = [0, 2, 1, 0, 0]


  ; plot Rc distribution for all clouds
  R_r = R[resolve_ind]
  if n_elements(Rc_binsize) eq 0 then begin
     binsize = 2
  endif else begin
     binsize = Rc_binsize
  endelse
  yhist = histogram(R_r, binsize = binsize, min = min(R_r), $
	  max = max(R_r), location = binvals)

  plothist, R_r, xhist, yhist, bin=binsize, axiscolor = 'black', $
      color = cgcolor('black'), $
      boxplot = 0, thick = 4, xtitle= '!8R!X!Dc!N (pc)', $
      ytitle = 'Number of clouds', $
      yrange = [0, max(yhist) * 1.1], $ ; was 1.3, Eric
	  xrange = [0,68], $ ; [min(binvals)-(max(binvals)-min(binvals))*0.2 binvals[(where(yhist eq max(yhist)))[0]]+(max(binvals)-min(binvals))*1.2]
      charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
      position=[0.18,0.16,0.98,0.98]
  
  ; ytitle = 'Number of clouds'
  ; cgtext, 0.05, 0.30, ytitle, charsize = 1.7, charthick = 5.0, $
	 ;  orientation = 90, /normal

  print,'!x.crange',!x.crange
  yfit = gaussfit(xhist[1:-1],yhist[1:-1], A,sigma=eA, nterms=3)
  xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
  z = (xgauss-A[1])/A[2]
  ygauss=A[0]*EXP(-z^2/2.)
  cgoplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('black')

  print, '==================='
  print, 'R', A
  print, 'd_R', eA
  print, 'max(R_r),min(R_r)',max(R_r),min(R_r)
  print, '==================='


  ; outer R distribution
  if outer_ct gt 0 then begin
    R_outer = R_r[outer_ind]
    yhist = histogram(R_outer, binsize = binsize, min = min(R_r), $
        max = max(R_r), location = binvals)
    ; best fit value of A = [6.12499, 18.1234, 6.36103, 0.8]
    yfit = gaussfit((binvals+binsize/2.)[1:-1], yhist[1:-1], A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) + 0.8

    print, '==================='
    print, 'R_outer', A
    print, 'd_R_outer', eA
    print, '==================='
 
    plothist, R_outer, xhist, yhist,bin = binsize, axiscolor = 'black', $
        color = cgcolor('red'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('red')
 
    print, '==================='
    print, 'R_outer', A
    print, 'd_R_outer', eA
    print, '==================='

  end

  ; ring R distribution
  if ring_ct gt 0 then begin
    R_ring = R_r[ring_ind]
  
    plothist, R_ring, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('dark green'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist[1:-1], yhist[1:-1], A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.)
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('dark green')
  
    print, '==================='
    print, 'R_ring', A
    print, 'd_R_ring', eA
    print, 'A', A
    print, '==================='
  end

  ; inner R distribution
  if inner_ct gt 0 then begin
    R_inner = R_r[inner_ind]

    plothist, R_inner,xhist,yhist,bin = binsize, axiscolor = 'black', $
        color = cgcolor('blue'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist[1:-1], yhist[1:-1], A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.)
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('blue')
  
    print, '==================='
    print, 'R_inner', A
    print, 'd_R_inner', eA
    print, '==================='
  end
  
  ; plot Rc vs Distance
  ; cgplot, dist_binvals+dist_binsize/2., Rc_array, psym=16, color='black', $
  ;    xtitle = 'R!Dgal!N (pc)', $
  ;    ytitle = 'R!Dc!N (pc)', $
  ;    axiscolor = 'black', $
  ;    xrange=[min(dist_binvals)-(max(dist_binvals)-min(dist_binvals))*0.2, $
	 ;   max(dist_binvals)+(max(dist_binvals)-min(dist_binvals))*0.2], $
  ;    yrange=[min(Rc_array)-(max(Rc_array)-min(Rc_array))*0.2, $
	 ;    max(Rc_array)+(max(Rc_array)-min(Rc_array))*0.2], xst=1, yst=1, $
  ;    charsize = 1.0, xthick=5, ythick=5, charthick=5, $
	 ; ticklen = 0.07, xminor=5, yminor=4,$
  ;    position = [0.64,0.67,0.94,0.92]
  ; cgoplot, dist_binvals+dist_binsize/2., Rc_array, linestyle=0, $
  ;    linethick = 4.

r_limit = props.rmstorad*sqrt(props.BMAJ_DEG*props.BMIN_DEG) / props.SIG_TO_FWHM / props.DEGPERPIX * props.PCPERPIX
  cgArrow, 0, 120, r_limit[0], 120, /DATA, THICK=3
; rmstorad = 1.9
; print, r_limit[0]

  ; legend
  if keyword_set(inner_pc) gt 0 then begin
    cglegend,title=['All GMCs', 'Inner GMCs', 'Intermediate GMCs', 'Outer GMCs'], psym=[0,0,0,0], $
      symsize=1, color=['black', 'blue','dark green','red'], $
      location=[0.55, 0.92], $ ; was 0.62,0.4, Eric
      length=0.07, linestyle=[0,0,0,0], thick=3.,$
      VSpace=1.5, charsize=1.4, charthick=5.0
  endif


  device, /close_file
  set_plot, 'X'


  ; set_plot,'ps'
  ; device, filename=out_Rc_distribution, bits_per_pixel=8, /encapsulated, $
  ;       xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0

  ; cgplot, dist_binvals+dist_binsize/2., Rc_array, psym=16, color='black', $
  ;    xtitle = 'R!Dgal!N (pc)', $
  ;    ytitle = 'R!Dc!N (pc)', $
  ;    axiscolor = 'black', $
  ;    ; xrange=[min(dist_binvals)-(max(dist_binvals)-min(dist_binvals))*0.2, $
  ;    ; max(dist_binvals)+(max(dist_binvals)-min(dist_binvals))*0.2], $
  ;    ; yrange=[min(Rc_array)-(max(Rc_array)-min(Rc_array))*0.2, $
  ;    ;  max(Rc_array)+(max(Rc_array)-min(Rc_array))*0.2], xst=1, yst=1, $
  ;    charsize = 1.0, xthick=5, ythick=5, charthick=5, $
  ;  ticklen = 0.07, xminor=5, yminor=4
  ;    ; position = [0.64,0.67,0.94,0.92]
  ; cgoplot, dist_binvals+dist_binsize/2., Rc_array, linestyle=0, $
  ;    linethick = 4.
  ; device, /close_file
  ; set_plot, 'X'

; ----------------------------------------
; Plot Mlum distribution
; ----------------------------------------
  !P.FONT = 1
  set_plot,'ps'
  device, filename=out_Mlum_distribution, bits_per_pixel=8, /encapsulated, $
        xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0, SET_FONT='Times', /TT_FONT

  Mlum_r = Mlum[resolve_ind]
  Mlum_r = alog10(Mlum_r)

  ; overall Mlum distribution
  binsize = 0.08
  yhist = histogram(Mlum_r, binsize = binsize, min = min(Mlum_r), $
	  max = max(Mlum_r), location = binvals)
  plothist, Mlum_r,xhist,yhist,bin = binsize, axiscolor = 'black', $
      color = cgcolor('black'), $
      boxplot = 0, thick = 4, $
      xtitle= 'log(!8M!X!Dgas!N / M'+sunsymbol()+'!n)', $
      ytitle = 'Number of clouds', $
      yrange = [0, max(yhist)*1.1], $ ; was 1.3, Eric
	  xrange = [4.3,6.6], $ ; [min(binvals)-(max(binvals)-min(binvals))*0.2, binvals[(where(yhist eq max(yhist)))[0]]+(max(binvals)-min(binvals))*1.3]
      charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
      position=[0.18,0.16,0.98,0.98]
  ; ytitle = 'Number of clouds'
  
  ; cgtext, 0.05, 0.30, ytitle, charsize = 1.7, charthick = 5.0, $
	 ;  orientation = 90, /normal

  yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
  xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
  z = (xgauss-A[1])/A[2]
  ygauss=A[0]*EXP(-z^2/2.) 
  oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('black')

  print, '==================='
  print, 'Mlum', A
  print, 'd_Mlum', eA
  print, 'max(Mlum_r),min(Mlum_r)',max(Mlum_r),min(Mlum_r)
  print, '==================='


  ; outer Mlum distribution
  if outer_ct gt 0 then begin
    Mlum_outer = Mlum_r[outer_ind]

    plothist, Mlum_outer, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('red'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yhist = histogram(Mlum_outer, binsize = binsize, location = binvals)
    yfit = gaussfit((binvals+binsize/2.), yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.)
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('red')
  
    print, '==================='
    print, 'Mlum_outer', A
    print, 'd_Mlum_outer', eA
    print, 'Mean Mlum_outer', mean(Mlum_outer)
    print, '==================='
  end
  
  ; ring Mlum distribution
  if ring_ct gt 0 then begin
    Mlum_ring = Mlum_r[ring_ind]

    plothist, Mlum_ring, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('dark green'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('dark green')
  
    print, '==================='
    print, 'Mlum_ring', A
    print, 'd_Mlum_ring', eA
    print, 'Mean Mlum_ring', mean(Mlum_ring)
    print, '==================='
  end
  

  ; inner Mlum distribution
  if inner_ct gt 0 then begin
    Mlum_inner = Mlum_r[inner_ind]

    plothist, Mlum_inner, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('blue'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('blue')
  
    print, '==================='
    print, 'Mlum_inner', A
    print, 'd_Mlum_inner', eA
    print, 'Mean Mlum_inner', mean(Mlum_inner)
    print, '==================='
  end
  
  ; ; plot Mlum vs Distance
  ; cgplot, dist_binvals+dist_binsize/2., Mlum_array, psym=16, color='black', $
  ;    xtitle = 'R!Dgal!N (pc)', $
  ;    ytitle= 'log(M!Dgas!N/M'+sunsymbol()+')', $
  ;    axiscolor = 'black', $
  ;    xrange=[min(dist_binvals)-(max(dist_binvals)-min(dist_binvals))*0.2, $
	 ;   max(dist_binvals)+(max(dist_binvals)-min(dist_binvals))*0.2], $
  ;    yrange=[min(Mlum_array)-(max(Mlum_array)-min(Mlum_array))*0.2, $
	 ;    max(Mlum_array)+(max(Mlum_array)-min(Mlum_array))*0.2], xst=1, yst=1, $
  ;    charsize = 1.0, xthick=5, ythick=5, charthick=5, $
	 ; ticklen = 0.07, xminor=5, yminor=4,$
  ;    position = [0.64,0.67,0.94,0.92]

  ; cgoplot, dist_binvals+dist_binsize/2., Mlum_array, linestyle=0, $
  ;    linethick = 4.


  ; legend
  ; if keyword_set(inner_pc) gt 0 then begin
  ;   cglegend,title=['All GMCs', 'Inner GMCs', 'Intermediate GMCs', 'Outer GMCs'], psym=[0,0,0,0], $
  ;     symsize=1, color=['black', 'blue','dark green','red'], $
  ;     location=[0.55, 0.80], $ ; was 0.62, 0.40, Eric
  ;     length=0.07, linestyle=[0,0,0,0], thick=3.,$
  ;     VSpace=1.2, charsize=1.4, charthick=5.0
  ; endif

  device, /close_file
  set_plot, 'X'

; ----------------------------------------
; Plot density sigma distribution
; ----------------------------------------
!P.FONT = 1
  set_plot,'ps'
  device, filename=out_sigmaGas_distribution, bits_per_pixel=8, /encapsulated, $
        xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0, SET_FONT='Times', /TT_FONT

  sigma_r = sigma[resolve_ind]
  sigma_r = alog10(sigma_r)

  ; overall sigma distribution
  binsize = 0.08

  yhist = histogram(sigma_r, binsize = binsize, min = min(sigma_r), $
	  max = max(sigma_r), location = binvals)
  plothist, sigma_r, xhist, yhist, bin = binsize, axiscolor = 'black', $
      color = cgcolor('black'), $
      boxplot = 0, thick = 4, $
	  xtitle= 'log('+cgGreek('Sigma')+'!Dgas!N / M' +sunsymbol()+'!n pc!U-2!N )', $  ; 'log($\Sigma$!Dc!N/(M' +sunsymbol()+' pc!U-2!N))'
      ytitle = 'Number of clouds', $
      yrange = [0, 220], $ ; was 1.3, Eric
	  xrange = [1.4,3.1], $ ;[min(binvals)-(max(binvals)-min(binvals))*0.2,  $ ; 
	   ;binvals[(where(yhist eq max(yhist)))[0]]+(max(binvals)-min(binvals))*1.2], $
      charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
      position=[0.18,0.16,0.98,0.98]
  ; ytitle = 'Number of clouds'
  ; cgtext, 0.05, 0.30, ytitle, charsize = 1.7, charthick = 5.0, $
	 ;  orientation = 90, /normal

  yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
  xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
  z = (xgauss-A[1])/A[2]
  ygauss=A[0]*EXP(-z^2/2.)
  oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('black')

  print, '==================='
  print, 'sigmaGas', A
  print, 'd_sigmaGas', eA
  print, 'A', A
  print, 'max(sigma_r),min(sigma_r)',max(sigma_r),min(sigma_r)
  print, '==================='


  ; outer sigma distribution
  if outer_ct gt 0 then begin
    sigma_outer = sigma_r[outer_ind]

    plothist, sigma_outer, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('red'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('red')
  
    print, '==================='
    print, 'sigma_outer', A
    print, 'd_sigma_outer', eA
    print, '==================='
  end

  ; ring sigma distribution
  if ring_ct gt 0 then begin
    sigma_ring = sigma_r[ring_ind]

    plothist, sigma_ring, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('dark green'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
  
    print, '==================='
    print, 'sigma_ring', A
    print, 'd_sigma_ring', eA
    print, '==================='
  
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('dark green')
  end

  ; inner sigma distribution
  if inner_ct gt 0 then begin
    sigma_inner = sigma_r[inner_ind]

    plothist, sigma_inner, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('blue'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.)
  
    print, '==================='
    print, 'sigma_inner', A
    print, 'd_sigma_inner', eA
    print, '==================='
  
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('blue')
  end

  ; plot Sigma vs Distance
  ; cgplot, dist_binvals+dist_binsize/2., sigma_array, psym=16, color='black', $
  ;    xtitle = 'R!Dgal!N (pc)', $
	 ; ytitle= 'log($\Sigma$!Dgas!N/M' +sunsymbol()+' pc!U-2!N)', $
  ;    axiscolor = 'black', $
  ;    xrange=[min(dist_binvals)-(max(dist_binvals)-min(dist_binvals))*0.2, $
	 ;   max(dist_binvals)+(max(dist_binvals)-min(dist_binvals))*0.2], $
  ;    yrange=[min(sigma_array)-(max(sigma_array)-min(sigma_array))*0.2, $
	 ;    max(sigma_array)+(max(sigma_array)-min(sigma_array))*0.2], xst=1, yst=1, $
  ;    charsize = 1.0, xthick=5, ythick=5, charthick=5, $
	 ; ticklen = 0.07, xminor=5, yminor=4,$
  ;    position = [0.64,0.67,0.94,0.92]

  ; cgoplot, dist_binvals+dist_binsize/2., sigma_array, linestyle=0, $
  ;    linethick = 4.

  ; legend
  ; if keyword_set(inner_pc) gt 0 then begin
  ;   cglegend,title=['All GMCs', 'Inner GMCs', 'Intermediate GMCs', 'Outer GMCs'], psym=[0,0,0,0], $
  ;     symsize=1, color=['black', 'blue','dark green','red'], $
  ;     location=[0.2, 0.85], $ ; was 0.62, 0.40, Eric
  ;     length=0.07, linestyle=[0,0,0,0], thick=3.,$
  ;     VSpace=1.2, charsize=1.4, charthick=5.0
  ; endif


  ;print,'min(sigma_inner)',min(sigma_inner)
  ;print,'min(sigma_ring)',min(sigma_ring)
  ;print,'min(sigma_outer)',min(sigma_outer)

  device, /close_file
  set_plot, 'X'


; ----------------------------------------
; Plot vrms distribution
; ----------------------------------------
!P.FONT = 1
  set_plot,'ps'
  device, filename=out_vrms_distribution, bits_per_pixel=8, /encapsulated, $
        xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0, SET_FONT='Times', /TT_FONT

  ; vrms_r = vrms[resolve_ind]

  ; overall vrms distribution
  binsize = 1.0

  yhist = histogram(vrms_r, binsize = binsize, min = min(vrms_r), $
	  max = max(vrms_r), location = binvals)
  plothist, vrms_r, xhist, yhist, bin = binsize, axiscolor = 'black', $
      color = cgcolor('black'), $
      boxplot = 0, thick = 4, $
	  xtitle= '!8$\sigma$!X!Dobs,los!N (km s!U-1!N)', $ ; was obs,los, Eric
      ytitle = 'Number of clouds', $
      yrange = [0, max(yhist) * 1.1], $ ; was 1.3
	  xrange = [0,9], $ ; was 1.2 
      charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
      position=[0.18,0.16,0.98,0.98]
  ; ytitle = 'Number of clouds'
  ; cgtext, 0.05, 0.30, ytitle, charsize = 1.7, charthick = 5.0, $
	 ;  orientation = 90, /normal
  ; xrange was [min(binvals)-(max(binvals)-min(binvals))*0.2, binvals[(where(yhist eq max(yhist)))[0]]+(max(binvals)-min(binvals))*1.1]

  yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
  xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
  z = (xgauss-A[1])/A[2]
  ygauss=A[0]*EXP(-z^2/2.)
  oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('black')

  print, '==================='
  print, 'vrms', A
  print, 'd_vrms', eA
  print, 'max(vrms_r),min(vrms_r)',max(vrms_r),min(vrms_r)
  print, '==================='

  ; outer vrms distribution
  if outer_ct gt 0 then begin
    vrms_outer = vrms_r[outer_ind]

    plothist, vrms_outer, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('red'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('red')
  
    print, '==================='
    print, 'vrms_outer', A
    print, 'd_vrms_outer', eA
    print, '==================='
  
  end

  ; ring vrms distribution
  if ring_ct gt 0 then begin
    vrms_ring = vrms_r[ring_ind]

    plothist, vrms_ring, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('dark green'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('dark green')
  
    print, '==================='
    print, 'vrms_ring', A
    print, 'd_vrms_ring', eA
    print, '==================='
  end

  ; inner vrms distribution
  if inner_ct gt 0 then begin
    vrms_inner = vrms_r[inner_ind]

    plothist, vrms_inner, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('blue'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yhist = histogram(vrms_inner, max=max(vrms_r), min=min(vrms_r), $
                binsize = binsize, location = binvals)
    yfit = gaussfit(binvals+binsize/2., yhist, A,sigma=eA, nterms=3)
    ;yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=4)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('blue')
  
    print, '==================='
    print, 'vrms_inner', A
    print, 'd_vrms_inner', eA
    print, '==================='
  
  end

  ; plot vrms vs Distance
  ; cgplot, dist_binvals+dist_binsize/2., vrms_array, psym=16, color='black', $
  ;    xtitle = 'R!Dgal!N (pc)', $
	 ; ytitle= '$\sigma$!Dobs,los!N (km s!U-1!N)', $
  ;    axiscolor = 'black', $
  ;    xrange=[min(dist_binvals)-(max(dist_binvals)-min(dist_binvals))*0.2, $
	 ;   max(dist_binvals)+(max(dist_binvals)-min(dist_binvals))*0.2], $
  ;    yrange=[min(vrms_array)-(max(vrms_array)-min(vrms_array))*0.2, $
	 ;    max(vrms_array)+(max(vrms_array)-min(vrms_array))*0.2], xst=1, yst=1, $
  ;    charsize = 1.0, xthick=5, ythick=5, charthick=5, $
	 ; ticklen = 0.07, xminor=5, yminor=4,$
  ;    position = [0.64,0.67,0.94,0.92]

  ; cgoplot, dist_binvals+dist_binsize/2., vrms_array, linestyle=0, $
  ;    linethick = 4.

v_limit = props.gal_dv
  cgArrow, 0, 300, v_limit[0], 300, /DATA, THICK=3
; rmstorad = 1.9
; print, v_limit

  ; legend
  ; if keyword_set(inner_pc) gt 0 then begin
  ;   cglegend,title=['All GMCs', 'Inner GMCs', 'Intermediate GMCs', 'Outer GMCs'], psym=[0,0,0,0], $
  ;     symsize=1, color=['black', 'blue','dark green','red'], $
  ;     location=[0.54, 0.85], $ ; was 0.62, 0.40
  ;     length=0.07, linestyle=[0,0,0,0], thick=3.,$
  ;     VSpace=1.2, charsize=1.5, charthick=5.0
  ; endif

  device, /close_file
  set_plot, 'X'




; ----------------------------------------
; Plot log alpha_vir distribution
; ----------------------------------------
!P.FONT = 1
  set_plot,'ps'
  device, filename=out_alphavir_distribution, bits_per_pixel=8, /encapsulated, $
        xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0, SET_FONT='Times', /TT_FONT

  ; overall log alpha_vir distribution
  binsize = 0.1

  yhist = histogram(log_alpha_r, binsize = binsize, min = min(log_alpha_r), $
    max = max(log_alpha_r), location = binvals)
  plothist, log_alpha_r, xhist, yhist, bin = binsize, axiscolor = 'black', $
      color = cgcolor('black'), $
      boxplot = 0, thick = 4, $
    xtitle= 'log(!8$\alpha$!X!Dobs,vir!N)', $
      ytitle = 'Number of clouds', $
      yrange = [0, 220], $ ; was 1.3
    xrange = [-1.0,1.0], $ ; was 1.2 
      charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
      position=[0.18,0.16,0.95,0.98]
  ; ytitle = 'Number of clouds'
  ; cgtext, 0.05, 0.30, ytitle, charsize = 1.7, charthick = 5.0, $
   ;  orientation = 90, /normal
  ; xrange was [min(binvals)-(max(binvals)-min(binvals))*0.2, binvals[(where(yhist eq max(yhist)))[0]]+(max(binvals)-min(binvals))*1.1]

  yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
  xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
  z = (xgauss-A[1])/A[2]
  ygauss=A[0]*EXP(-z^2/2.)
  oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('black')

  print, '==================='
  print, 'log_alpha', A
  print, 'd_log_alpha', eA
  print, 'max(log_alpha_r),min(log_alpha_r)',max(log_alpha_r),min(log_alpha_r)
  print, '==================='

  ; outer log_alpha distribution
  if outer_ct gt 0 then begin
    log_alpha_outer = log_alpha_r[outer_ind]

    plothist, log_alpha_outer, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('red'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('red')
  
    print, '==================='
    print, 'vrms_outer', A
    print, 'd_vrms_outer', eA
    print, '==================='
  
  end

  ; ring log_alpha distribution
  if ring_ct gt 0 then begin
    log_alpha_ring = log_alpha_r[ring_ind]

    plothist, log_alpha_ring, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('dark green'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=3)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('dark green')
  
    print, '==================='
    print, 'log_alpha_ring', A
    print, 'd_log_alpha_ring', eA
    print, '==================='
  end

  ; inner log_alpha distribution
  if inner_ct gt 0 then begin
    log_alpha_inner = log_alpha_r[inner_ind]

    plothist, log_alpha_inner, xhist, yhist, bin = binsize, axiscolor = 'black', $
        color = cgcolor('blue'), $
        boxplot = 0, thick = 4, $
        charsize=1.7, xthick =5.0, ythick=5.0, charthick=5.0, $
        position=[0.18,0.16,0.98,0.98], /overplot

    ; yhist = histogram(log_alpha_inner, max=max(log_alpha_inner), min=min(log_alpha_inner), $
    ;             binsize = binsize, location = binvals)
    ; yfit = gaussfit(binvals+binsize/2., yhist, A,sigma=eA, nterms=3)

    yfit = gaussfit(xhist, yhist, A,sigma=eA, nterms=4)
    xgauss = findgen(1e4)/(1e4-1.)*(!x.crange[1]-!x.crange[0])+ !x.crange[0]
    z = (xgauss-A[1])/A[2]
    ygauss=A[0]*EXP(-z^2/2.) 
    oplot, xgauss, ygauss, psym=0, thick=3, color=cgcolor('blue')
  
    print, '==================='
    print, 'log_alpha_inner', A
    print, 'd_log_alpha_inner', eA
    print, '==================='
  
  end

  device, /close_file
  set_plot, 'X'



; ; ----------------------------------------
; ; Plot sigma vs Rc
; ; ----------------------------------------
;   set_plot,'ps'
;   device, filename=out_sigmaGas_vs_Rc, bits_per_pixel=8, /encapsulated, $
;         xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0

;   resolve_ind = where(R gt 0.0)
;   sigma_r = sigma[resolve_ind]
;   sigma_r = alog10(sigma_r)
;   R_r = R[resolve_ind]
;   R_r = alog10(R_r)
;   Mlum_r = Mlum[resolve_ind]
;   Mlum_r = alog10(Mlum_r)

;   md_logR = median(d_logR[resolve_ind])
;   md_logSigma = median(d_logSigma[resolve_ind])
;   md_logM = median(d_logM[resolve_ind])

;   ; Spearman correlate coefficient
;   corr = r_correlate(R_r, sigma_r)
;   print, '===================================================='
;   print, 'Spearman correlate coefficient of R_r vs sigma_r', $
;     corr
;   print, '===================================================='

;   ; plot R vs sigma
;   xmax = max(R_r) + 0.3
;   xmin = min(R_r) - 0.3
;   ymax = max(sigma_r) + 0.3
;   ymin = min(sigma_r) - 0.3
;   cgplot, R_r, sigma_r, psym=16, color='black', $
;       xtitle='log(R!Dc!N/pc)', $
;       ytitle='log($\Sigma$!Dgas!N/M' +sunsymbol()+' pc!U-2!N)', $
;       axiscolor='black', $
;       xrange=[xmin, xmax], $
; 	  yrange=[1.2, 3.0], xst=1, yst=1, $
;       charsize = 1.7, xthick=5, ythick=5, charthick=5, $
;       position=[0.18,0.16,0.98,0.98]

;   if inner_ct gt 0 then begin
;       cgoplot, R_r[inner_ind], sigma_r[inner_ind], psym=16, $
;           color=cgColor('blue')
;   endif
;   if ring_ct gt 0 then begin
;       cgoplot, R_r[ring_ind], sigma_r[ring_ind], psym=16, $
;           color=cgColor('dark green')
;   endif
;   if outer_ct gt 0 then begin
;       cgoplot, R_r[outer_ind], sigma_r[outer_ind], psym=16, $
;           color=cgColor('red')
;   endif

;   ; plot typical uncertainties
;   err_xpos=xmax-(xmax-xmin)/8.
;   err_ypos=ymin+(ymax-ymin)/5.
;   oploterror, err_xpos, err_ypos, md_logR/2., md_logSigma/2., $
; 	  psym=0, color='red', errthick = 4.0, errcolor='black', $
; 	  hatlength=0.0, charsize = 1.3, xthick=3, ythick=3, charthick=3

;   ; constant Mlum line
;   ; Mlum = 10^5 Msolar
;   ;x = findgen(1e4)/1e4*(max(R_r) - min(R_r))+ min(R_r)
;   ;y = 5.-alog10(!pi) - 2.* x
;   ;oplot, x, y, thick=5, linestyle = 1
;   ; Mlum = 10^4.5 Msolar
;   ;x = findgen(1e4)/1e4*(max(R_r) - min(R_r))+ min(R_r)
;   ;y = 4.5-alog10(!pi) - 2.* x
;   ;oplot, x, y, thick=5, linestyle = 1
;   ; Mlum = 10^5.5 Msolar
;   ;x = findgen(1e4)/1e4*(max(R_r) - min(R_r))+ min(R_r)
;   ;y = 5.5-alog10(!pi) - 2.* x
;   ;oplot, x, y, thick=5, linestyle = 1

;   ; legend
;   if keyword_set(inner_pc) gt 0 then begin
;     cglegend,title=['inner', 'intermediate', 'outer'], psym=16, $
;       symsize=1.2, color=['blue','dark green','red'], $
;       location=[0.65, 0.90], $
;       length=0.0, linestyle=2, thick=5.,$
;       VSpace=2.0, charsize=1.5, charthick=5.0
;   endif

;   device, /close_file
;   set_plot, 'X'

; ; ----------------------------------------
; ; Plot sigma vs Mlum
; ; ----------------------------------------
;   set_plot,'ps'
;   device, filename=out_sigmaGas_vs_Mlum, bits_per_pixel=8, /encapsulated, $
;         xsize=5., ysize=5., /inches, /color, xoffset=0, yoffset=0

;   resolve_ind = where(R gt 0.0)
;   sigma_r = sigma[resolve_ind]
;   sigma_r = alog10(sigma_r)
;   Mlum_r = Mlum[resolve_ind]
;   Mlum_r = alog10(Mlum_r)

;   md_logR = median(d_logR[resolve_ind])
;   md_logSigma = median(d_logSigma[resolve_ind])
;   md_logM = median(d_logM[resolve_ind])

;   ; Spearman correlate coefficient
;   corr = r_correlate(Mlum_r, sigma_r)
;   print, '===================================================='
;   print, 'Spearman correlate coefficient of Mlum_r vs sigma_r', $
;     corr
;   print, '===================================================='

;   ; overall vrms distribution
;   xmax = max(Mlum_r) + 0.3
;   xmin = min(Mlum_r) - 0.3
;   ymax = max(sigma_r) + 0.3
;   ymin = min(sigma_r) - 0.3
;   cgplot, Mlum_r, sigma_r, psym=16, color='black', $
;       xtitle= 'log(M/M'+sunsymbol()+')', $
;       ytitle='log($\Sigma$!Dgas!N/M' +sunsymbol()+' pc!U-2!N)', $
;       axiscolor='black', $
;       xrange=[3.7, 6.8], $
; 	  yrange=[1.4, 3.0], xst=1, yst=1, $
;       charsize = 1.7, xthick=5, ythick=5, charthick=5, $
;       position=[0.18,0.16,0.98,0.98]

;   if inner_ct gt 0 then begin
;       cgoplot, Mlum_r[inner_ind], sigma_r[inner_ind], psym=16, $
;           color=cgColor('blue')
;   endif
;   if ring_ct gt 0 then begin
;       cgoplot, Mlum_r[inner_ind], sigma_r[inner_ind], psym=16, $
;           color=cgColor('dark green')
;   endif
;   if outer_ct gt 0 then begin
;       cgoplot, Mlum_r[outer_ind], sigma_r[outer_ind], psym=16, $
;           color=cgColor('red')
;   endif

;   ; plot typical uncertainties
;   err_xpos=xmax-(xmax-xmin)/8.
;   err_ypos=ymin+(ymax-ymin)/5.
;   oploterror, err_xpos, err_ypos, md_logM/2., md_logSigma/2., $
; 	  psym=0, color='red', errthick = 4.0, errcolor='black', $
; 	  hatlength=0.0, charsize = 1.3, xthick=3, ythick=3, charthick=3

;   ; legend
;   if keyword_set(inner_pc) gt 0 then begin
;     cglegend,title=['inner', 'intermediate', 'outer'], psym=16, $
;       symsize=1.2, color=['blue','dark green','red'], $
;       location=[0.65, 0.90], $
;       length=0.0, linestyle=2, thick=5.,$
;       VSpace=2.0, charsize=1.5, charthick=5.0
;   endif

;   device, /close_file
;   set_plot, 'X'



END
